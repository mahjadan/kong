version: '3.7'
services:

  kong:
    image: "kong/kong-gateway:2.8.1.4-alpine"
    container_name: kong-gateway
    user: "kong"
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: postgres_db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
    depends_on:
      - postgres_db
    ports:
      - "8000:8000/tcp"
      - "127.0.0.1:8001:8001/tcp"
      - "8443:8443/tcp"
      - "127.0.0.1:8444:8444/tcp"
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure


  postgres_db:
    container_name: postgres_db
    image: postgres:9.6
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    healthcheck:
      test: ["CMD","pg_isready","-U","kong"]
      interval: 20s
      timeout: 20s
      retries: 3
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    stdin_open: true
    tty: true
    volumes:
      - kong_data:/var/lib/postgresql/data

  kong-migrations:
    image: "kong/kong-gateway:2.8.1.4-alpine"
    command: kong migrations bootstrap
    depends_on:
      - postgres_db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: postgres_db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure

  kong-migrations-up:
    image: "kong/kong-gateway:2.8.1.4-alpine"
    command: kong migrations up && kong migrations finish
    depends_on:
      - postgres_db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: postgres_db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure

  konga:
    container_name: konga
    image: pantsel/konga:latest
    restart: always
    environment:
      DB_ADAPTER: postgres
      TOKEN_SECRET: mysecrettoken
      DB_HOST: postgres_db
      DB_USER: kong
      DB_PASSWORD: kong
      DB_DATABASE: konga_db
      NODE_ENV: production
    depends_on:
      - postgres_db
    ports:
      - 1337:1337

  prepare_konga:
    container_name: prepare_konga
    image: pantsel/konga:latest
    command: "-c prepare -a postgres -u postgresql://kong:kong@postgres_db:5432/konga_db"
    depends_on:
      - postgres_db

volumes:
  kong_data:

networks:
  default:
    name: gandauth
    external: true
